#include <unistd.h>
#include <fcntl.h>
#include <stdlib.h>

/**
 * read_textfile - Reads a text file and prints it to the POSIX standard output.
 * @filename: The name of the file to read.
 * @letters: The number of letters to read and print.
 *
 * Return: The actual number of letters it could read and print.
 *         If the file cannot be opened or read, return 0.
 *         If filename is NULL, return 0.
 *         If write fails or does not write the expected amount of bytes, return 0.
 */
ssize_t read_textfile(const char *filename, size_t letters)
{
    int fd;      // File descriptor
    ssize_t rd;   // Number of bytes read
    char *buf;    // Buffer to store read data

    if (filename == NULL)
        return (0);

    // Open the file for reading
    fd = open(filename, O_RDONLY);
    if (fd == -1)
        return (0);

    // Allocate memory for the buffer
    buf = malloc(letters);
    if (buf == NULL)
    {
        close(fd);
        return (0);
    }

    // Read from the file
    rd = read(fd, buf, letters);
    if (rd == -1)
    {
        free(buf);
        close(fd);
        return (0);
    }

    // Write to standard output
    if (write(STDOUT_FILENO, buf, rd) != rd)
    {
        free(buf);
        close(fd);
        return (0);
    }

    // Clean up and close the file
    free(buf);
    close(fd);

    return (rd);
}
